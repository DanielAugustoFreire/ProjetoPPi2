#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

typedef struct {
    char nome[30], tipo_pao[30];
    int codigo;
    float preco;
} LANCHES;

void clear_screen() {
    printf("\033[H\033[J"); // Comando para limpar a tela no Linux
}

void inserir() {
    FILE* arquivo;
    LANCHES lan;
    arquivo = fopen("lanches.bin", "ab");
    if (arquivo == NULL) {
        printf("Erro na abertura do arquivo");
    } else {
        do {
            clear_screen();
            fflush(stdin);
            printf("\nNome do Lanche: ");
            gets(lan.nome);
            fflush(stdin);
            printf("Tipo de Pao: ");
            gets(lan.tipo_pao);
            printf("Codigo:");
            scanf("%d", &lan.codigo);
            fflush(stdin);
            printf("Preco:");
            scanf("%f", &lan.preco);

            fwrite(&lan, sizeof(LANCHES), 1, arquivo);
            printf("Deseja continuar? ");
        } while (tolower(getchar()) == 's'); // Usando tolower para tratar 'S' e 's'
        fclose(arquivo);
    }
}

void listar() {
    FILE* arquivo;
    LANCHES lan;
    arquivo = fopen("lanches.bin", "rb");
    if (arquivo == NULL) {
        printf("Erro na abertura do arquivo");
    } else {
        while (fread(&lan, sizeof(LANCHES), 1, arquivo) == 1) {
            printf("\nNome_Lanche: %s\n", lan.nome);
            printf("Tipo de Pao: %s\n", lan.tipo_pao);
            printf("Codigo: %d\n", lan.codigo);
            printf("Preco: %f\n", lan.preco);
        }
        fclose(arquivo);
    }
    printf("Pressione Enter para continuar...");
    getchar(); // Espera pela tecla Enter
}

int buscar(char lanche[30]) {
    FILE* arquivo;
    LANCHES lan;
    arquivo = fopen("lanches.bin", "rb");
    if (arquivo == NULL) {
        printf("Erro na abertura do arquivo");
    } else {
        while (fread(&lan, sizeof(LANCHES), 1, arquivo) == 1) {
            if (strcmp(lanche, lan.nome) == 0) {
                fclose(arquivo); // Fechar o arquivo após a busca
                return (ftell(arquivo) - sizeof(LANCHES));
            }
        }
        fclose(arquivo);
    }
    return -1;
}

void pesquisarlanche(char lanche[30]) {
    FILE* arquivo;
    LANCHES lan;
    arquivo = fopen("lanches.bin", "rb");
    if (arquivo == NULL) {
        printf("Erro na abertura do arquivo");
    } else {
        while (fread(&lan, sizeof(LANCHES), 1, arquivo) == 1) {
            if (strcmp(lanche, lan.nome) == 0) {
                printf("\nNome_Lanche: %s\n", lan.nome);
                printf("Tipo de Pao: %s\n", lan.tipo_pao);
                printf("Codigo: %d\n", lan.codigo);
                printf("Preco: %f\n", lan.preco);
            }
        }
        fclose(arquivo);
    }
    printf("Pressione Enter para continuar...");
    getchar(); // Espera pela tecla Enter
}

void pesquisarlanchepao(char lanche[30]) {
    FILE* arquivo;
    LANCHES lan;
    arquivo = fopen("lanches.bin", "rb");
    if (arquivo == NULL) {
        printf("Erro na abertura do arquivo");
    } else {
        while (fread(&lan, sizeof(LANCHES), 1, arquivo) == 1) {
            if (strcmp(lanche, lan.tipo_pao) == 0) {
                printf("\nNome_Lanche: %s\n", lan.nome);
                printf("Tipo de Pao: %s\n", lan.tipo_pao);
                printf("Codigo: %d\n", lan.codigo);
                printf("Preco: %f\n", lan.preco);
            }
        }
        fclose(arquivo);
    }
    printf("Pressione Enter para continuar...");
    getchar(); // Espera pela tecla Enter
}

void trocarpreco(char lanche[30], float preco_new) {
    FILE* arquivo;
    LANCHES lan;

    arquivo = fopen("lanches.bin", "rb+");
    if (arquivo == NULL) {
        printf("Erro na abertura do arquivo");
    } else {
        while (fread(&lan, sizeof(LANCHES), 1, arquivo) == 1) {
            if (strcmp(lanche, lan.nome) == 0) {
                lan.preco = preco_new;

                fseek(arquivo, -sizeof(LANCHES), SEEK_CUR);

                fwrite(&lan, sizeof(LANCHES), 1, arquivo);

                printf("\nNome_Lanche: %s\n", lan.nome);
                printf("Tipo de Pao: %s\n", lan.tipo_pao);
                printf("Codigo: %d\n", lan.codigo);
                printf("Preco: %f\n", lan.preco);

                fflush(arquivo);
            }
        }
        fclose(arquivo);
    }
    printf("Pressione Enter para continuar...");
    getchar(); // Espera pela tecla Enter
}

void remover(char lanche[30]) {
    int pos;
    FILE* arquivo;
    LANCHES lan;
    arquivo = fopen("lanches.bin", "rb");

    if (arquivo == NULL) {
        printf("Erro ao Abrir o Arquivo");
    } else {
        pos = buscar(lanche);
        if (pos == -1) {
            printf("Lanche nao encontrado");
        } else {
            fseek(arquivo, pos, SEEK_SET);
            fread(&lan, sizeof(LANCHES), 1, arquivo);
            printf("\nNome_Lanche: %s\n", lan.nome);
            printf("Tipo de Pao: %s\n", lan.tipo_pao);
            printf("Codigo: %d\n", lan.codigo);
            printf("Preco: %f\n", lan.preco);
            printf("\nDeseja excluir o registro? ");
            if (tolower(getchar()) == 's') {
                FILE* temp = fopen("auxiliar.bin", "wb");
                rewind(arquivo);
                fread(&lan, sizeof(LANCHES), 1, arquivo);
                while (!feof(arquivo)) {
                    if (strcmp(lanche, lan.nome) != 0)
                        fwrite(&lan, sizeof(LANCHES), 1, temp);
                    fread(&lan, sizeof(LANCHES), 1, arquivo);
                }
                fclose(arquivo);
                fclose(temp);
                remove("lanches.bin");
                rename("auxiliar.bin", "lanches.bin");
                printf("Excluido com sucesso!");
            } else {
                fclose(arquivo);
            }
        }
        printf("Pressione Enter para continuar...");
        getchar(); // Espera pela tecla Enter
    }
}

int main() {
    int opcao;
    char lanche[30];
    float novo_preco;
    do {
        clear_screen();
        printf("\n1 - Cadastrar lanche\n");
        printf("2 - Listar lanche\n");
        printf("3 - Consultar lanche pelo nome\n");
        printf("4 - Alterar Preco de um Lanche\n");
        printf("5 - Consultar Lanche por Pao\n");
        printf("6 - Remover Lanche pelo Nome\n");
        printf("7 - Sair\n");
        printf("Escolha a opcao: ");
        scanf("%d", &opcao);
        switch (opcao) {
            case 1:
                inserir();
                break;
            case 2:
                listar();
                break;
            case 3:
                printf("Informe o nome do lanche a ser consultado: ");
                scanf(" %29s", lanche); // Lê no máximo 29 caracteres
                pesquisarlanche(lanche);
                break;
            case 4:
                printf("Informe o lanche a ser trocado o preco: ");
                scanf(" %29s", lanche); // Lê no máximo 29 caracteres
                printf("Informe o novo preço: ");
                scanf("%f", &novo_preco);
                trocarpreco(lanche, novo_preco);
                break;
            case 5:
                printf("Informe o tipo de pao dos lanches a ser consultado: ");
                scanf(" %29s", lanche); // Lê no máximo 29 caracteres
                pesquisarlanchepao(lanche);
                break;
            case 6:
                printf("Informe o nome do lanche a ser excluído: ");
                scanf(" %29s", lanche); // Lê no máximo 29 caracteres
                remover(lanche);
                break;
            case 7:
                printf("Ate logo...");
                break;
            default:
                printf("Opcao invalida!\n");
        }
    } while (opcao != 7);

    return 0;
}
